version: "3.9"
services:
  postgres1:
    image: postgres:13.3
    #network_mode: host
    environment:
      POSTGRES_DB: "trsis"
      POSTGRES_PASSWORD: "1234"
    volumes:
      - .:/docker-entrypoint-initdb.d
    ports:
      - "6432:5432"
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"
  postgres2:
    image: postgres:13.3
    environment:
      POSTGRES_DB: "trsis2"
      POSTGRES_PASSWORD: "1234"
    volumes:
      - .:/docker-entrypoint-initdb.d
    ports:
      - "7432:5432"
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
     - 22181:2181
     - 2888:2888
     - 3888:3888
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1     
  schema-registry:
    image: confluentinc/cp-schema-registry:7.0.1
    ports:
     - 8181:8181
     - 8081:8081
    environment:
     - SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS=kafka:9092
     - SCHEMA_REGISTRY_HOST_NAME=schema-registry
     - SCHEMA_REGISTRY_LISTENERS=http://schema-registry:8081
    links:
     - zookeeper
  debezium:
    image: quay.io/debezium/connect:1.8
    ports:
     - 8083:8083
    links:
     - kafka
     - postgres1
     - postgres2
     - schema-registry
    environment:
     - BOOTSTRAP_SERVERS=kafka:9092
     - GROUP_ID=1
     - CONFIG_STORAGE_TOPIC=my_connect_configs
     - OFFSET_STORAGE_TOPIC=my_connect_offsets
     - STATUS_STORAGE_TOPIC=my_connect_statuses
     - INTERNAL_KEY_CONVERTER=org.apache.kafka.connect.json.JsonConverter
     - INTERNAL_VALUE_CONVERTER=org.apache.kafka.connect.json.JsonConverter
     - KEY_CONVERTER=io.confluent.connect.avro.AvroConverter
     - VALUE_CONVERTER=io.confluent.connect.avro.AvroConverter
  instance1:
    build:
      context: lab
    links:
     - kafka
     - postgres1
    depends_on:
     - kafka
     - postgres1
    ports:
     - 9443:8443
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres1:5432/inst1
      - SPRING_DATASOURCE_DRIVERCLASSNAME=org.hibernate.dialect.PostgreSQLDialect
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=inst1pass
  instance2:
    build:
      context: lab
    links:
     - kafka
     - postgres2
    depends_on:
     - kafka
     - postgres2
    ports:
     - 10443:8443
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres2:5432/inst2
      - SPRING_DATASOURCE_DRIVERCLASSNAME=org.hibernate.dialect.PostgreSQLDialect
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=inst2pass
  consumer1:
    build:
      context: consumer
    environment:
      - KAFKA_BOOTSTRAPADDRESS=kafka:9092
      - KAFKA_TOPIC=postgres1.public.school
      - KAFKA_GROUPID=7654 
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres2:5432/inst2
      - SPRING_DATASOURCE_DRIVERCLASSNAME=org.hibernate.dialect.PostgreSQLDialect
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=inst2pass
    links:
     - kafka
     - postgres2
    depends_on:
     - kafka
     - postgres1
  consumer2:
    build:
      context: consumer
    environment:
      - KAFKA_BOOTSTRAPADDRESS=kafka:9092
      - KAFKA_TOPIC=postgres2.public.school
      - KAFKA_GROUPID=7655 
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres1:5432/inst1
      - SPRING_DATASOURCE_DRIVERCLASSNAME=org.hibernate.dialect.PostgreSQLDialect
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=inst1pass
    links:
     - kafka
     - postgres1
    depends_on:
     - kafka
     - postgres1
  debeziumui:
    image: quay.io/debezium/debezium-ui:1.8
    environment:
    - KAFKA_CONNECT_URIS=http://debezium:8083
    ports:
     - 8080:8080
    links:
     - debezium
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8090:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
      - KAFKA_CLUSTERS_0_SCHEMAREGISTRY=http://schema-registry:8081
    links:
     - kafka
     - zookeeper