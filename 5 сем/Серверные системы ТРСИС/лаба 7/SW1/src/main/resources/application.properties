springdoc.api-docs.path=/api-docs

server.port= 8442
server.ssl.key-store= target/keystore.p12
server.ssl.key-store-password= mypassword
server.ssl.keyStoreType= PKCS12
server.ssl.keyAlias= tomcat
#spring.datasource.url=jdbc:postgresql://localhost:5432/trsis

#spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
#spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL81Dialect
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.globally_quoted_identifiers=true
#spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.defer-datasource-initialization=true

spring.kafka.producer.bootstrap-servers=${KAFKA_HOST}
spring.kafka.consumer.bootstrap-servers=${KAFKA_HOST}
spring.kafka.consumer.group-id=${KAFKA_GROUP_ID}
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.enable.auto.commit=true
spring.kafka.consumer.auto.commit.interval.ms=1000